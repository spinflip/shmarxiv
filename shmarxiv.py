#!/usr/bin/env python 

import random
import sys
from markov import *
import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--corpus', action='store', default='corpora/cond-mat')
args = parser.parse_args()

corpus_file = open(args.corpus+'.txt')
corpus = corpus_file.read()
split_corpus = corpus.splitlines()
N = sum(1 for line in open(args.corpus+'.txt'))
Nright = 0
Nwrong = 0
OKGREEN = '\033[92m'
FAIL = '\033[91m'
ENDC = '\033[0m'
OKBLUE = '\033[94m'

print '\n'
print OKBLUE+'----- arXiv vs. ShmarXiv version 1.0 -----'+ENDC
print 'Welcome to shmarXiv, a '+OKBLUE+'sh'+ENDC+'ell-based '+OKBLUE+'m'+ENDC+'arkovian '+OKBLUE+'arXiv'+ENDC+' generator game!'
print 'corpus: '+args.corpus
print 'size: '+str(N)
print '\n'

while 1:
	markov = Markov(corpus_file)
	generated = markov.generate_markov_text()

	exact_match = False
	myLine = '<title> ' + generated + ' </title>'
	for line in split_corpus:
		if line == myLine:
			exact_match = True
			break

	if exact_match == False:
	
		die = random.randint(0,N-1)
		real = split_corpus[die]
		real = real.replace('<title> ','')
		real = real.replace(' </title>','')

		die = random.randint(0,1)
		if die == 1:
			print "(1) ", generated
			print "(2) ", real
			guess = raw_input('Which one is real? Type 1 or 2 (any other key to quit playing):\n')
			if guess == '2':
				print OKGREEN+'correct!'+ENDC
				Nright = Nright+1
			elif guess == '1':
				print FAIL+'wrong!'+ENDC
				Nwrong = Nwrong+1
			else:
				sys.exit(0)
		else:
			print "(1) ", real
			print "(2) ", generated
			guess = raw_input('Which one is real? Type 1 or 2 (any other key to quit playing):\n')
			if guess == '1':
				print OKGREEN+'correct!'+ENDC
				Nright = Nright+1
			elif guess == '2':
				print FAIL+'wrong!'+ENDC
				Nwrong = Nwrong+1
			else:
				sys.exit(0)
		print '\n','right: ', Nright
		print 'wrong: ', Nwrong
		print 'success rate: ', str(int(round(Nright*100./(Nright+Nwrong),0)))+'%','\n'
	
	else:
		print FAIL+'exact title generated by accident and will be skipped: '+ENDC+generated+'\n'
		continue